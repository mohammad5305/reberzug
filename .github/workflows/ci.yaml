name: ci
on:
  push:
  pull_request:
  workflow_dispatch:

# Spend CI time only on latest ref: https://github.com/jonhoo/rust-ci-conf/pull/5
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  semantic:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          change_path: "src/"
          search_commit_body: false
  build:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ i686-unknown-linux-gnu, x86_64-unknown-linux-gnu ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install gcc-libs
        run: |
          sudo apt install gcc-multilib

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          # use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          TAR_NAME=$(printf "reberzug-%s.tar.gz" $(echo ${{ matrix.target }} | sed 's/-unknown//g' ) )

          tar czvf ../../../${TAR_NAME} reberzug
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: 'reberzug*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  fmt:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    name: stable / fmt
    allow-failure: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check
        run: cargo fmt --check
